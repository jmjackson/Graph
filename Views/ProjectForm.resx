<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ProjectNo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Contractor.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Supplier.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Geosynthetic.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>